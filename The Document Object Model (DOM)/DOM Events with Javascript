--MOUSE EVENTS--

When you use a mouse device on a website, mouse events fire. You’ve seen the click and wheel events, but, there are even more mouse events to explore!

The mousedown event is fired when the user presses a mouse button down. This is different from a click event because mousedown doesn’t need the mouse button to be released to fire.

The mouseup event is fired when the user releases the mouse button. This is different from the click and mousedown events because mouseup doesn’t depend on the mouse button being pressed down to fire.

The mouseover event is fired when the mouse enters the content of an element.

The mouseout event is fired when the mouse leaves an element.


/*

// These variables store the boxes on the side
let itemOne = document.getElementById('list-item-one');
let itemTwo = document.getElementById('list-item-two');
let itemThree = document.getElementById('list-item-three');
let itemFour = document.getElementById('list-item-four');
let itemFive = document.getElementById('list-item-five');
let resetButton = document.getElementById('reset-button');

// This function programs the "Reset" button to return the boxes to their default styles
let reset = function() {
  itemOne.style.width = ''
  itemTwo.style.backgroundColor = ''
  itemThree.innerHTML = 'The mouse must leave the box to change the text'
  itemFive.style.display = "none"
};
resetButton.onclick = reset;

// Write your code here
function increaseWidth(){
  itemOne.style.width = '500px';
}

itemOne.addEventListener('mouseover', increaseWidth);

function changeBackground(){
  itemTwo.style.backgroundColor = 'green';
}

itemTwo.addEventListener('mouseup', changeBackground);

// step 5
function changeText() {
  itemThree.innerHTML = 'The mouse has left the element';
}

itemThree.addEventListener('mousepuit', changeText);

function showItem() {
  itemFive.style.display = 'block';

}
itemFive.addEventListener('mousedown', showItem);


*/



KEYBOARD EVENTS

Other popular types of events are keyboard events! keyboard events are triggered by user interaction with keyboard keys in the browser.

The keydown event is fired while a user presses a key down.

The keyup event is fired while a user releases a key.Key

The keypress event is fired when a user presses a key down and releases it. This is different from using keydown and keyup events together, because those are two complete events and keypress is one complete event.

Keyboard events have unique properties assigned to their event objects like the .key property that stores the values of the key pressed by the user. You can program the event handler function to react to a specific key, or react to any interaction with the keyboard.


/*
let ball = document.getElementById('float-circle');

// Write your code below

// step 1: creating a function called up() that will raise the .bottom position of the ball to '250px'
function up() {
  ball.style.bottom = '250px';
}

// step 2: function called down() that will lower the .bottom position of the ball to '50px'
function down() {
ball.style.bottom = '50px';
}

// step 3: event handler property that runs the up() function when a keydown event fires on the document object, OR anywhere on the DOM, as the event target.

document.addEventListener('keydown', up);

// step 4: Same function as step 3 but will then make the ball come down from being in the air, instead of just floating infinitely.

document.addEventListener('keyup', down);



*/
