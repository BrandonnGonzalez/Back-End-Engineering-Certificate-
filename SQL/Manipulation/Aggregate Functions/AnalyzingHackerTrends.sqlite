/*
Hacker News is a popular website run by Y Combinator. Itâ€™s widely known by people in the tech industry as a community site for sharing news, showing off projects, asking questions, among other things..

In this project, you will be working with a table named hacker_news that contains stories from Hacker News since its launch in 2007. It has the following columns:

title: the title of the story
user: the user who submitted the story
score: the score of the story
timestamp: the time of the story
url: the link of the story
This data was kindly made publicly available under the MIT license.
*/


 /*
SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;
*/

-- step 2: Finds the total score of all the stories
/*
SELECT SUM(score)
FROM hacker_news;
*/


-- step 3: Finds the users who have gotten combined scores of more than 200 and their combined scores
/*
SELECT user, SUM(score)
FROM hacker_news
GROUP BY 1
HAVING SUM(score) > 200
ORDER BY 2 DESC;
*/

-- step 4: add the user's scores together and divide by the total to get the percentage. Comes out to 22%
-- SELECT(517 + 309 + 304 + 282) / 6366.0; 

-- step 5: Use a query to check how many times each user has posted the link
/*
SELECT user, COUNT(*)
FROM hacker_news
WHERE url LIKE '%https://www.youtube.com/watch?v=dQw4w9WgXcQ%'
GROUP BY 1
ORDER BY 2 DESC;
*/

-- step 6: Use a CASE statement to see which site is viewed the most
/*
SELECT CASE
  WHEN url LIKE '%github.com%' THEN 'Github'
  WHEN url LIKE '%medium.com%' THEN 'Medium'
  WHEN url LIKE '%nytimes.com%' THEN 'NY Times'
  ELSE 'Other'
  END AS 'Source',
  COUNT(*)
FROM hacker_news
GROUP BY 1;
*/

-- step 7:
/*
SELECT timestamp
FROM hacker_news
LIMIT 10;
*/

-- step 9: This will return the timestamp column, and returns the formatted date by grabbing the hour only of the timestamp column from the hacker_news table, grouping it by the timestamp, limiting it to 20 rows total.
/*
SELECT timestamp,
   strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 20;
*/

-- step 10: This selects the timestamp column with the formatted date of only the hour, the average score for each hour, and also the count of all columns for each hour, grouped by the formatted hour, and ordered by the average score from highest to lowest.
SELECT strftime('%H', timestamp) AS 'Hour',
  ROUND(AVG(score), 0) AS 'Average Score',
  COUNT(*) AS 'Number of Stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC;









