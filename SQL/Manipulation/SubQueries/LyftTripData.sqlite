/*
Suppose you are a Data Analyst at Lyft, a ride-sharing platform. For a project, you were given three tables:

trips: trips information
riders: user data
cars: autonomous cars
*/


-- Step 1: Examines all three tables and their info/columns
/*
SELECT * FROM trips;

SELECT * FROM riders;

SELECT * FROM cars;
*/

/*
Step 2: Primary keys 
trips pKey = id
riders pKey = id
cars pKey = id
They all have the same name, but they are very different
*/


/*
Step 3: Simple cross join between riders and cars table
*/
/*
SELECT *
FROM riders
CROSS JOIN cars;
*/

-- Step 4: Creating a LEFT JOIN to join the columns between trips and riders that makes sense.
/*
SELECT *
FROM trips
LEFT JOIN riders
ON trips.rider_id = riders.id
*/

-- Step 5: Find the columns to join on and combine the trips and cars table using an INNER JOIN.
 -- The common columns are: car_id
 /*
 SELECT *
 FROM trips
 JOIN cars
 ON trips.car_id = cars.id;
*/

-- Step 6: Stack the riders table on top of the new table named riders2. (STACKING MEANS UNION)
/*
SELECT * 
FROM riders
UNION
SELECT * 
FROM riders2;
*/

-- BONUS QUERIES AND AGGREGATES QUESTIONS
-- Step 7: What is the average cost for a trip?
/*
SELECT ROUND(AVG(cost), 2)
FROM trips;
*/

-- Step 8: Find all the riders who have used Lyft less than 500 times.
/*
SELECT *
FROM riders
WHERE total_trips < 500
UNION
SELECT * 
FROM riders2
WHERE total_trips < 500;
*/

-- Step 9: Calculate the number of cars that are active.
/*
SELECT COUNT(*) AS 'Active cars'
FROM cars
WHERE status = 'active';
-- OR CAN BE DONE AS SELECT * FROM cars WHERE status = 'active';
*/

-- Step 10: Write a query that finds the two cars that have the highest trips_completed.
SELECT * 
FROM cars
ORDER BY trips_completed DESC
LIMIT 2;

/*

*/
